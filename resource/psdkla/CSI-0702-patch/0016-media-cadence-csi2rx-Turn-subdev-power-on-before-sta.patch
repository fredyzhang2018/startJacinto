From 843e25057d9d795dab30d163e0604113fb9760a0 Mon Sep 17 00:00:00 2001
From: Pratyush Yadav <p.yadav@ti.com>
Date: Thu, 18 Feb 2021 17:39:40 +0530
Subject: [PATCH 16/20] media: cadence: csi2rx: Turn subdev power on before
 starting stream

The subdevice power needs to be turned on before the stream is started.
Otherwise it might not be in the proper state to stream the data.

For some reason, it is observer with OV5640 that turning the power off
when stopping the stream causes the next stream to freeze infinitely. So
leave it on for now until this issue is root caused.

Signed-off-by: Pratyush Yadav <p.yadav@ti.com>
Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
Signed-off-by: Fredy Zhang <fredyzhang2018@gmail.com>
---
 drivers/media/platform/cadence/cdns-csi2rx.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/drivers/media/platform/cadence/cdns-csi2rx.c b/drivers/media/platform/cadence/cdns-csi2rx.c
index 75266ce74..e01b5465a 100644
--- a/drivers/media/platform/cadence/cdns-csi2rx.c
+++ b/drivers/media/platform/cadence/cdns-csi2rx.c
@@ -268,6 +268,10 @@ static int csi2rx_start(struct csi2rx_priv *csi2rx)
 		writel(reg, csi2rx->base + CSI2RX_DPHY_LANE_CTRL_REG);
 	}
 
+	ret = v4l2_subdev_call(csi2rx->source_subdev, core, s_power, true);
+	if (ret)
+		goto err_disable_pclk;
+
 	ret = v4l2_subdev_call(csi2rx->source_subdev, video, s_stream, true);
 	if (ret)
 		goto err_disable_pclk;
@@ -358,6 +362,10 @@ static void csi2rx_stop(struct csi2rx_priv *csi2rx)
 
 	if (v4l2_subdev_call(csi2rx->source_subdev, video, s_stream, false))
 		dev_warn(csi2rx->dev, "Couldn't disable our subdev\n");
+	/*
+	 * FIXME: We should also turn off subdev power here but it causes the
+	 * next run to freeze infinitely. Figure out why.
+	 */
 
 	if (csi2rx->dphy) {
 		writel(0, csi2rx->base + CSI2RX_DPHY_LANE_CTRL_REG);
-- 
2.17.1

